[testenv]
skip_install = true
allowlist_externals =
  terraform
  git
  sh
passenv = *
commands_pre =
  ansible-galaxy install -r ansible.requirements.yml -p tests/playbooks/roles
  ansible-galaxy install -r tests/ansible.requirements.yml -p tests/playbooks/roles
deps = -r tests/requirements.txt

[testenv:tests]
commands = pytest --basetemp="{envtmpdir}" {posargs} tests

[testenv:tools]
deps =
  ansible-lint
  yamllint
commands_pre = # Empty
commands = {posargs}

[testenv:dev]
setenv =
  ANSIBLE_HOST_KEY_CHECKING = false
commands_pre =
  {[testenv]commands_pre}
  sh -c 'cd tests/terraform; terraform init; terraform apply -auto-approve'
  sh -c '\
  export ANSIBLE_INVENTORY=tests/terraform/$(cd tests/terraform; terraform output inventory); \
  ansible all -m wait_for_connection; \
  ansible-playbook tests/playbooks/fix-dns.yml tests/playbooks/docker.yml'
commands =
  sh -c 'ANSIBLE_INVENTORY=tests/terraform/$(cd tests/terraform; terraform output inventory) \
  ansible-playbook playbooks/00-apiserver-proxy.yml playbooks/01-site.yml {posargs}'

[testenv:destroy]
commands =
  sh -c 'cd tests/terraform; terraform init; terraform destroy -auto-approve'
