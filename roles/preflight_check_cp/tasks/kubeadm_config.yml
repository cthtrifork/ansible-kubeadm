---
- name: 'get kubeadm configmap if cluster running'
  command: kubeadm config view
  run_once: true
  changed_when: false
  check_mode: false
  delegate_to: '{{ cp_running_hosts|first }}'
  register: in_cluster_kubeadm_config
  when: cp_running_hosts|length > 0

- debug:
    var: in_cluster_kubeadm_config
    verbosity: 1
  run_once: true

- name: 'compute control_plane_endpoint'
  set_fact:
    cluster_config_orig: '{{ cluster_config_orig }}'
    control_plane_endpoint: >-
      {% if control_plane_endpoint is defined -%}
         {{ control_plane_endpoint }}
      {%- elif cluster_config_orig.controlPlaneEndpoint is defined -%}
         {{ cluster_config_orig.controlPlaneEndpoint }}
      {%- endif -%}
    current_cp_version: >-
      {{ cluster_config_orig.get("kubernetesVersion", "")
         |regex_replace("v(.*)", "\g<1>")}}
  run_once: true
  vars:
    cluster_config_orig: >-
      {%- if cp_running_hosts|length == 0 -%}
        {}
      {%- else -%}
        {{ in_cluster_kubeadm_config.stdout|from_yaml }}
      {%- endif -%}

- debug:
    var: control_plane_endpoint
    verbosity: 1
  run_once: true

- debug:
    var: current_cp_version
    verbosity: 1
  run_once: true

- name: 'Raise if condition unmet'
  fail:
    msg: >-
      "control_plane_endpoint is not set and you provided multi-nodes control plane.
      You need a reliable way to contact all the apiserver with a single endpoint.
  when: not control_plane_endpoint and ansible_play_hosts | length > 1
